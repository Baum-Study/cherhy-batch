CREATE TABLE BATCH_JOB_INSTANCE
(
    JOB_INSTANCE_ID BIGINT IDENTITY NOT NULL PRIMARY KEY,
    VERSION         BIGINT,
    JOB_NAME        VARCHAR(100) NOT NULL,
    JOB_KEY         VARCHAR(32)  NOT NULL,
    constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY)
);

CREATE TABLE BATCH_JOB_EXECUTION
(
    JOB_EXECUTION_ID BIGINT IDENTITY NOT NULL PRIMARY KEY,
    VERSION          BIGINT,
    JOB_INSTANCE_ID  BIGINT       NOT NULL,
    CREATE_TIME      TIMESTAMP(9) NOT NULL,
    START_TIME       TIMESTAMP(9) DEFAULT NULL,
    END_TIME         TIMESTAMP(9) DEFAULT NULL,
    STATUS           VARCHAR(10),
    EXIT_CODE        VARCHAR(2500),
    EXIT_MESSAGE     VARCHAR(2500),
    LAST_UPDATED     TIMESTAMP(9),
    constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID)
        references BATCH_JOB_INSTANCE (JOB_INSTANCE_ID)
);

CREATE TABLE BATCH_JOB_EXECUTION_PARAMS
(
    JOB_EXECUTION_ID BIGINT       NOT NULL,
    PARAMETER_NAME   VARCHAR(100) NOT NULL,
    PARAMETER_TYPE   VARCHAR(100) NOT NULL,
    PARAMETER_VALUE  VARCHAR(2500),
    IDENTIFYING      CHAR(1)      NOT NULL,
    constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID)
        references BATCH_JOB_EXECUTION (JOB_EXECUTION_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION
(
    STEP_EXECUTION_ID  BIGINT IDENTITY NOT NULL PRIMARY KEY,
    VERSION            BIGINT       NOT NULL,
    STEP_NAME          VARCHAR(100) NOT NULL,
    JOB_EXECUTION_ID   BIGINT       NOT NULL,
    CREATE_TIME        TIMESTAMP(9) NOT NULL,
    START_TIME         TIMESTAMP(9) DEFAULT NULL,
    END_TIME           TIMESTAMP(9) DEFAULT NULL,
    STATUS             VARCHAR(10),
    COMMIT_COUNT       BIGINT,
    READ_COUNT         BIGINT,
    FILTER_COUNT       BIGINT,
    WRITE_COUNT        BIGINT,
    READ_SKIP_COUNT    BIGINT,
    WRITE_SKIP_COUNT   BIGINT,
    PROCESS_SKIP_COUNT BIGINT,
    ROLLBACK_COUNT     BIGINT,
    EXIT_CODE          VARCHAR(2500),
    EXIT_MESSAGE       VARCHAR(2500),
    LAST_UPDATED       TIMESTAMP(9),
    constraint JOB_EXEC_STEP_FK foreign key (JOB_EXECUTION_ID)
        references BATCH_JOB_EXECUTION (JOB_EXECUTION_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT
(
    STEP_EXECUTION_ID  BIGINT        NOT NULL PRIMARY KEY,
    SHORT_CONTEXT      VARCHAR(2500) NOT NULL,
    SERIALIZED_CONTEXT LONGVARCHAR,
    constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID)
        references BATCH_STEP_EXECUTION (STEP_EXECUTION_ID)
);

CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT
(
    JOB_EXECUTION_ID   BIGINT        NOT NULL PRIMARY KEY,
    SHORT_CONTEXT      VARCHAR(2500) NOT NULL,
    SERIALIZED_CONTEXT LONGVARCHAR,
    constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID)
        references BATCH_JOB_EXECUTION (JOB_EXECUTION_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION_SEQ
(
    ID BIGINT IDENTITY
);
CREATE TABLE BATCH_JOB_EXECUTION_SEQ
(
    ID BIGINT IDENTITY
);
CREATE TABLE BATCH_JOB_SEQ
(
    ID BIGINT IDENTITY
);

CREATE TABLE PAYMENT
(
    ID           INTEGER IDENTITY PRIMARY KEY,
    PAYMENT_DATE DATE                                NOT NULL,
    AMOUNT       DECIMAL(10, 0)                      NOT NULL,
    CURRENCY     VARCHAR(3)                          NOT NULL,
    STATUS       VARCHAR(20)                         NOT NULL,
    CREATED_AT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    UPDATED_AT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

CREATE TABLE SETTLEMENT
(
    ID              INTEGER IDENTITY PRIMARY KEY,
    SELLER_ID       INTEGER                             NOT NULL,
    AMOUNT          DECIMAL(10, 0)                      NOT NULL,
    SETTLEMENT_DATE DATE                                NOT NULL,
    CREATED_AT      TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

CREATE TABLE CUSTOMER
(
    ID     INTEGER IDENTITY PRIMARY KEY,
    NAME   VARCHAR(100) NOT NULL,
    AGE    INTEGER      NOT NULL,
    STATUS VARCHAR(20)  NOT NULL
);

CREATE TABLE IMAGE
(
    ID          INTEGER IDENTITY PRIMARY KEY,
    URL         VARCHAR(255) NOT NULL,
    CUSTOMER_ID INTEGER NULL
);

CREATE TABLE PRODUCT
(
    ID          INTEGER IDENTITY PRIMARY KEY,
    NAME        VARCHAR(100)                        NOT NULL,
    CUSTOMER_ID INTEGER                             NOT NULL,
    PRICE       DECIMAL(10, 0)                      NOT NULL,
    CREATED_AT  TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    UPDATED_AT  TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

CREATE TABLE PURCHASED_PRODUCT
(
    ID           INTEGER IDENTITY PRIMARY KEY,
    CUSTOMER_ID  INTEGER                             NOT NULL,
    PRODUCT_ID   INTEGER                             NOT NULL,
    STATUS       VARCHAR(20)                         NOT NULL,
    PRICE        DECIMAL(10, 0)                      NOT NULL,
    PURCHASED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

CREATE TABLE MILEAGE
(
    ID          INTEGER IDENTITY PRIMARY KEY,
    CUSTOMER_ID INTEGER                             NOT NULL,
    PRICE       DECIMAL(10, 0)                      NOT NULL,
    CREATED_AT  TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    UPDATED_AT  TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);